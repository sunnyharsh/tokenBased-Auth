const express = require("express");
const jwt = require("jsonwebtoken");
const app = express();

app.get("/api", (req, res) => {
    res.json({
        message: "welcome to the api"
    });
});

app.post("/api/posts", verifyToken, (req, res) => {
    jwt.verify(req.token, "secretkey", (err, authData) => {
        //if token is not valid than than if condition run
        if (err) {
            res.json({
                message: "Error comes",
               
            });
        }
        //token valid than run
         else {
            res.json({
                status: "200",
                message: "welcome to the api",
                authData
            });
        }
    });
});
app.post("/api/login", (req, res) => {
    //MOCK USER
    const user = {
        id: 1,
        username: "brad",
        email: "brad@gmail.com"
    };
    jwt.sign({ user }, "secretkey", (err, token) => {
        res.json({
            token
        });
    });
});
//FORMAT OF TOKEN
//Authorization: Bearer <access_token>

//verify Token
function verifyToken(req, res, next) {
    //Get auth header value
    const bearerHeader = req.headers["authorization"];

    //check if bearer is undefined
    if (typeof bearerHeader !== "undefined") {
        //Split at the space
        const bearer = bearerHeader.split(" ");
        //Get token from array
        const bearerToken = bearer[1];
        //Set the token
        req.token = bearerToken;
        //next middleware
        next();
    } else {
        res.sendStatus(403);
    }
}

app.listen(1234, (req, res) => {
    console.log("server start.....");
});
